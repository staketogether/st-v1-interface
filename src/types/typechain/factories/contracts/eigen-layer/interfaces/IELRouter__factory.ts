/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers'
import type { IELRouter, IELRouterInterface } from '../../../../contracts/eigen-layer/interfaces/IELRouter'

const _abi = [
  {
    inputs: [],
    name: 'AlreadyExecuted',
    type: 'error'
  },
  {
    inputs: [],
    name: 'AlreadyReported',
    type: 'error'
  },
  {
    inputs: [],
    name: 'BeaconBalanceTooLow',
    type: 'error'
  },
  {
    inputs: [],
    name: 'BlockNumberNotReached',
    type: 'error'
  },
  {
    inputs: [],
    name: 'ConfigNotSet',
    type: 'error'
  },
  {
    inputs: [],
    name: 'ConsensusNotDelayed',
    type: 'error'
  },
  {
    inputs: [],
    name: 'EarlyExecution',
    type: 'error'
  },
  {
    inputs: [],
    name: 'IncreaseOraclesToUseMargin',
    type: 'error'
  },
  {
    inputs: [],
    name: 'InsufficientEthBalance',
    type: 'error'
  },
  {
    inputs: [],
    name: 'MarginTooHigh',
    type: 'error'
  },
  {
    inputs: [],
    name: 'NoActiveConsensus',
    type: 'error'
  },
  {
    inputs: [],
    name: 'NoPendingExecution',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OnlyActiveOracle',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OnlyStakeTogether',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OracleAlreadyBlacklisted',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OracleAlreadyReported',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OracleBlacklisted',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OracleExists',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OracleNotBlacklisted',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OracleNotExists',
    type: 'error'
  },
  {
    inputs: [],
    name: 'PendingExecution',
    type: 'error'
  },
  {
    inputs: [],
    name: 'QuorumNotReached',
    type: 'error'
  },
  {
    inputs: [],
    name: 'ReportBlockShouldBeGreater',
    type: 'error'
  },
  {
    inputs: [],
    name: 'ReportDelayBlocksTooHigh',
    type: 'error'
  },
  {
    inputs: [],
    name: 'ReportRevoked',
    type: 'error'
  },
  {
    inputs: [],
    name: 'RequiredMoreOracles',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SentinelExists',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SentinelNotExists',
    type: 'error'
  },
  {
    inputs: [],
    name: 'StakeTogetherAlreadySet',
    type: 'error'
  },
  {
    inputs: [],
    name: 'WithdrawBalanceTooLow',
    type: 'error'
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'reportOracle',
        type: 'address'
      }
    ],
    name: 'AddReportOracle',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'reportBlock',
        type: 'uint256'
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'reportNextBlock',
        type: 'uint256'
      }
    ],
    name: 'AdvanceNextBlock',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'reportOracle',
        type: 'address'
      }
    ],
    name: 'BlacklistReportOracle',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'reportBlock',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        indexed: false,
        internalType: 'struct IELRouter.Report',
        name: 'report',
        type: 'tuple'
      }
    ],
    name: 'ConsensusApprove',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'reportBlock',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        indexed: false,
        internalType: 'struct IELRouter.Report',
        name: 'report',
        type: 'tuple'
      }
    ],
    name: 'ConsensusFail',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'reportBlock',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        indexed: false,
        internalType: 'struct IELRouter.Report',
        name: 'report',
        type: 'tuple'
      }
    ],
    name: 'ExecuteReport',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'ReceiveBridgeEther',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'ReceiveEther',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'ReceiveWithdrawEther',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'reportOracle',
        type: 'address'
      }
    ],
    name: 'RemoveReportOracle',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'reportBlock',
        type: 'uint256'
      }
    ],
    name: 'RevokeConsensusReport',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bool',
        name: 'bunkerMode',
        type: 'bool'
      }
    ],
    name: 'SetBunkerMode',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportFrequency',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'reportDelayBlock',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'reportNoConsensusMargin',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'oracleQuorum',
            type: 'uint256'
          }
        ],
        indexed: true,
        internalType: 'struct IELRouter.Config',
        name: 'config',
        type: 'tuple'
      }
    ],
    name: 'SetConfig',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'stakeTogether',
        type: 'address'
      }
    ],
    name: 'SetStakeTogether',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        indexed: true,
        internalType: 'struct IELRouter.Report',
        name: 'report',
        type: 'tuple'
      }
    ],
    name: 'SubmitReport',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'reportOracle',
        type: 'address'
      }
    ],
    name: 'UnBlacklistReportOracle',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'addReportOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'addSentinel',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'blacklistReportOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        internalType: 'struct IELRouter.Report',
        name: '_report',
        type: 'tuple'
      }
    ],
    name: 'executeReport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'forceNextReportBlock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        internalType: 'struct IELRouter.Report',
        name: '_report',
        type: 'tuple'
      }
    ],
    name: 'getReportHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_airdrop',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_withdrawals',
        type: 'address'
      }
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        internalType: 'struct IELRouter.Report',
        name: '_report',
        type: 'tuple'
      }
    ],
    name: 'isReadyToExecute',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        internalType: 'struct IELRouter.Report',
        name: '_report',
        type: 'tuple'
      }
    ],
    name: 'isReadyToSubmit',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'isReportOracle',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'isReportOracleBlackListed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'receiveWithdrawEther',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'removeReportOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'removeSentinel',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'reportBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_reportBlock',
        type: 'uint256'
      }
    ],
    name: 'revokeConsensusReport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportFrequency',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'reportDelayBlock',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'reportNoConsensusMargin',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'oracleQuorum',
            type: 'uint256'
          }
        ],
        internalType: 'struct IELRouter.Config',
        name: '_config',
        type: 'tuple'
      }
    ],
    name: 'setConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stakeTogether',
        type: 'address'
      }
    ],
    name: 'setStakeTogether',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reportBlock',
            type: 'uint256'
          },
          {
            internalType: 'bytes32',
            name: 'merkleRoot',
            type: 'bytes32'
          },
          {
            internalType: 'uint256',
            name: 'profitAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'profitShares',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lossAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'withdrawRefundAmount',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedReports',
            type: 'uint256'
          }
        ],
        internalType: 'struct IELRouter.Report',
        name: '_report',
        type: 'tuple'
      }
    ],
    name: 'submitReport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address'
      }
    ],
    name: 'unBlacklistReportOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    stateMutability: 'payable',
    type: 'receive'
  }
] as const

export class IELRouter__factory {
  static readonly abi = _abi
  static createInterface(): IELRouterInterface {
    return new Interface(_abi) as IELRouterInterface
  }
  static connect(address: string, runner?: ContractRunner | null): IELRouter {
    return new Contract(address, _abi, runner) as unknown as IELRouter
  }
}
